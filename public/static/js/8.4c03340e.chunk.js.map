{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","inputReducer","state","action","isTouched","Input","props","element","useReducer","initialValue","initialValid","inputState","dispatch","changeInputHandler","event","touchHandler","id","onInput","useEffect","placeholder","onChange","onBlur","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","placeId","useParams","auth","useContext","AuthContext","history","useHistory","title","description","inputChangeHandler","setFormData","useHttpClient","isLoadingSpinner","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","a","get_place_by_id","URLSearchParams","pid","responseData","data","fetchPlaces","asOverlay","formSubmitHandler","preventDefault","update_place","token","JSON","stringify","userId","Fragment","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/8.4c03340e.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            };\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '', \n        isTouched: false,\n        isValid: props.initialValid || false\n    });\n\n    const changeInputHandler = event => {\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value, \n            validators: props.validators\n        });\n    };\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid);\n    }, [ id, value, isValid, onInput ]);\n\n\n    let element;\n\n    switch (props.element) {\n        case 'input':\n            element = (\n                <input \n                    id={props.id} \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    onChange={changeInputHandler}\n                    onBlur={touchHandler}\n                    value={inputState.value}\n                />\n            )\n            break;\n        case 'textarea':\n            element = (\n                <textarea \n                    id={props.id} \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    onChange={changeInputHandler}\n                    onBlur={touchHandler}\n                    value={inputState.value}\n                />\n            )\n            break;\n        default: \n            break;\n    }\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default Input;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs){\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid \n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\n\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const inputChangeHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: \"SET_DATA\",\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n    return [formState, inputChangeHandler, setFormData];\n};","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from \"react-router-dom\";\n\nimport \"./PlaceForm.css\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport { \n    VALIDATOR_REQUIRE, \n    VALIDATOR_MINLENGTH \n} from \"../../shared/util/validators\";\nimport { useForm } from \"../../shared/hooks/form-hook\";\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { get_place_by_id, update_place } from \"../../assets/js/apiEndPoints\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nconst UpdatePlace = () => {\n    const placeId = useParams().placeId;\n    const auth = useContext(AuthContext);\n    const history = useHistory();\n\n    const [formState, inputChangeHandler, setFormData] = useForm({\n        title: {\n            value: '',\n            isValid: false\n        },\n        description: {\n            value: '',\n            isValid: false\n        }\n    }, false);\n\n    const { isLoadingSpinner, error, sendRequest, clearError } = useHttpClient();\n\n    const [ loadedPlace, setLoadedPlace ] = useState();\n\n    useEffect(() => {\n        const fetchPlaces = (async () => {\n            try {\n                const responseData = await sendRequest(get_place_by_id + '?' + new URLSearchParams({\n                    pid: placeId\n                }));\n                setLoadedPlace(responseData.data);\n                setFormData({\n                    title: {\n                        value: responseData.data.title,\n                        isValid: true\n                    },\n                    description: {\n                        value: responseData.data.description,\n                        isValid: true\n                    }\n                },true);\n            } catch(err) {}\n        });\n        fetchPlaces();\n    }, [sendRequest, placeId, setFormData])\n\n    if(isLoadingSpinner){\n        return (\n            <div className=\"center\">\n                <LoadingSpinner asOverlay/>\n            </div>\n        );\n    }\n\n    if(!loadedPlace && !error){\n        return (\n            <div className=\"center\">\n                <h2>Cant Find Place</h2>\n            </div>\n        );\n    }\n\n    const formSubmitHandler = async event => {\n        event.preventDefault();\n        try {\n            await sendRequest(update_place, 'POST', { \n                'Content-Type': 'application/json',\n                'Authorization': 'Bearer ' + auth.token\n            }, JSON.stringify({\n                id: placeId,\n                title: formState.inputs.title.value,\n                description: formState.inputs.description.value\n            }));\n            history.push(`/${auth.userId}/places`)\n        } catch (err) {}\n    };\n\n    return (\n        <React.Fragment>\n            {<ErrorModal error={error} onClear={clearError}/>}\n            {!isLoadingSpinner && loadedPlace && <form className=\"place-form\" onSubmit={formSubmitHandler}>\n                <Input \n                    id=\"title\" \n                    label=\"Title\"  \n                    type=\"text\" \n                    element=\"input\" \n                    validators={[VALIDATOR_REQUIRE()]} \n                    errorText='Please enter the valid text'\n                    onInput={inputChangeHandler}\n                    initialValue={loadedPlace.title}\n                    initialValid={true}\n                />\n                <Input \n                    id=\"description\" \n                    label=\"Description\"  \n                    element=\"textarea\" \n                    validators={[VALIDATOR_MINLENGTH(5)]} \n                    errorText='Please enter the valid description (atleast 5 characters)'\n                    onInput={inputChangeHandler}\n                    initialValue={loadedPlace.description}\n                    initialValid={true}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    UPDATE PLACE\n                </Button>\n            </form>}\n        </React.Fragment>\n    );\n};\n\nexport default UpdatePlace;"],"sourceRoot":""}