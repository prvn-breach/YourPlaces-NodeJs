{"version":3,"sources":["shared/components/FormElements/Button.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","assets/js/apiEndPoints.js","shared/components/UIElements/ErrorModal.js","shared/hooks/http-hook.js","shared/components/UIElements/Modal.js","../node_modules/regenerator-runtime/runtime.js"],"names":["Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","module","exports","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","apiBaseUrl","process","login","signup","get_users","create_place","get_user_places","get_place_by_id","update_place","delete_place","ErrorModal","onCancel","onClear","header","show","footer","useHttpClient","useState","isLoadingSpinner","setIsLoadingSpinner","setError","activeHttpRequests","useRef","sendRequest","useCallback","url","a","method","headers","body","httpAbortCtrl","AbortController","current","push","fetch","signal","response","json","responseData","filter","reqCtrl","Error","message","useEffect","forEach","abortCtrl","abort","clearError","ModalOverlay","content","style","headerClass","onSubmit","event","preventDefault","contentClass","footerClass","ReactDOM","createPortal","document","getElementById","Modal","Fragment","in","mountOnEnter","unmountOnExit","timeout","classNames","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","makeInvokeMethod","obj","call","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","invoke","result","__await","unwrapped","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","iter","toString","keys","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function"],"mappings":"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","file":"static/js/0.21beab2b.chunk.js","sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\n\nimport './Button.css';\n\nconst Button = props => {\n  if (props.href) {\n    return (\n      <a\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n        href={props.href}\n      >\n        {props.children}\n      </a>\n    );\n  }\n  if (props.to) {\n    return (\n      <Link\n        to={props.to}\n        exact={props.exact}\n        className={`button button--${props.size || 'default'} ${props.inverse &&\n          'button--inverse'} ${props.danger && 'button--danger'}`}\n      >\n        {props.children}\n      </Link>\n    );\n  }\n  return (\n    <button\n      className={`button button--${props.size || 'default'} ${props.inverse &&\n        'button--inverse'} ${props.danger && 'button--danger'}`}\n      type={props.type}\n      onClick={props.onClick}\n      disabled={props.disabled}\n    >\n      {props.children}\n    </button>\n  );\n};\n\nexport default Button;\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","const apiBaseUrl = process.env.REACT_APP_BACKEND_URL;\n\nexport const login = apiBaseUrl + '/users/login';\nexport const signup = apiBaseUrl + '/users/signup';\nexport const get_users = apiBaseUrl + '/users';\nexport const create_place = apiBaseUrl + '/places';\nexport const get_user_places = apiBaseUrl + '/places/find-by-user';\nexport const get_place_by_id = apiBaseUrl + '/places/find-by-id';\nexport const update_place = apiBaseUrl + '/places/update';\nexport const delete_place = apiBaseUrl + '/places/delete';\n","import React from 'react';\n\nimport Modal from './Modal';\nimport Button from '../FormElements/Button';\n\nconst ErrorModal = props => {\n  return (\n      <Modal\n        onCancel={props.onClear}\n        header=\"An Error Occurred!\"\n        show={!!props.error}\n        footer={<Button onClick={props.onClear}>Okay</Button>}\n      >\n        <p>{props.error}</p>\n      </Modal>\n  );\n};\n\nexport default ErrorModal;\n","import { useState, useCallback, useRef, useEffect } from 'react';\n\nexport const useHttpClient = () => {\n    const [isLoadingSpinner, setIsLoadingSpinner] = useState(false);\n    const [error, setError] = useState();\n\n    const activeHttpRequests = useRef([]);\n\n    const sendRequest = useCallback( async ( url, method = 'GET', headers = {}, body = null ) => {\n        setIsLoadingSpinner(true);\n        const httpAbortCtrl = new AbortController();\n        activeHttpRequests.current.push(httpAbortCtrl);\n        try {\n            const response = await fetch(url, {\n                method, \n                headers, \n                body,\n                signal: httpAbortCtrl.signal\n            });\n\n            const responseData = await response.json();\n\n            activeHttpRequests.current = activeHttpRequests.current.filter(\n                reqCtrl => reqCtrl !== httpAbortCtrl\n            );\n\n            if (!response['ok']) {\n                throw new Error(responseData.message);\n            }\n            setIsLoadingSpinner(false);\n            return responseData;\n        } catch (err) {\n            setIsLoadingSpinner(false);\n            setError(err.message || 'Something went wrong. Please try again')\n            throw err;\n        }\n    }, []);\n\n    const clearError = () => {\n        setError(null);\n    }\n\n    useEffect(() => {\n        return () => {\n            activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort())\n        };\n    }, []);\n\n    return { isLoadingSpinner, error, sendRequest, clearError };\n};","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { CSSTransition } from 'react-transition-group';\n\nimport Backdrop from './Backdrop';\nimport './Modal.css';\n\nconst ModalOverlay = props => {\n  const content = (\n    <div className={`modal ${props.className}`} style={props.style}>\n      <header className={`modal__header ${props.headerClass}`}>\n        <h2>{props.header}</h2>\n      </header>\n      <form\n        onSubmit={\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\n        }\n      >\n        <div className={`modal__content ${props.contentClass}`}>\n          {props.children}\n        </div>\n        <footer className={`modal__footer ${props.footerClass}`}>\n          {props.footer}\n        </footer>\n      </form>\n    </div>\n  );\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\n};\n\nconst Modal = props => {\n  return (\n    <React.Fragment>\n      {props.show && <Backdrop onClick={props.onCancel} />}\n      <CSSTransition\n        in={props.show}\n        mountOnEnter\n        unmountOnExit\n        timeout={200}\n        classNames=\"modal\"\n      >\n        <ModalOverlay {...props} />\n      </CSSTransition>\n    </React.Fragment>\n  );\n};\n\nexport default Modal;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n"],"sourceRoot":""}