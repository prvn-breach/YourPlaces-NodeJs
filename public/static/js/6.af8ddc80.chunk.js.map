{"version":3,"sources":["shared/components/UIElements/Card.js","shared/hooks/file-hook.js","shared/components/UIElements/Map.js","places/components/PlaceItem.js","places/components/PlaceList.js","places/pages/UserPlaces.js"],"names":["Card","props","className","style","children","setFileURL","path","process","Map","mapRef","useRef","center","zoom","useEffect","map","window","google","maps","current","Marker","position","ref","PlaceItem","useState","showMap","setShowMap","closeMapHandler","showConfirmModal","setShowConfirmModal","cancelDeleteHandler","useHttpClient","isLoadingSpinner","error","sendRequest","clearError","auth","useContext","AuthContext","deletePlaceHandler","event","a","delete_place","token","JSON","stringify","id","onDelete","Fragment","ErrorModal","onClear","Modal","onCancel","header","address","show","contentClass","footerClass","footer","Button","onClick","coordinates","inverse","danger","LoadingSpinner","asOverlay","src","image","alt","title","description","userId","createrId","to","PlaceList","items","length","place","key","creator","location","onDeletePlace","UserPlaces","loadedPlaces","setLoadedPlaces","useParams","get_user_places","URLSearchParams","uid","userPlaces","places","fetchPlaces","deletePlaceId","prevPlaces","filter"],"mappings":"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","file":"static/js/6.af8ddc80.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const setFileURL = (path) => {\n    const url = process.env.REACT_APP_ASSET_URL + path;\n    return url;\n};","import React, { useRef, useEffect } from 'react';\n\nimport './Map.css';\n\nconst Map = props => {\n     \n    const mapRef = useRef();\n\n    const { center, zoom } = props;\n\n    useEffect(() => {\n        var map = new window.google.maps.Map(mapRef.current, {\n            center: center,\n            zoom: zoom\n        });\n    \n        new window.google.maps.Marker({ position: center, map: map });\n    }, [center, zoom]);\n\n    return (\n        <div ref={mapRef} className={`map ${props.className}`} style={props.style}></div>\n    );\n};\n\nexport default Map;","import React, { useState, useContext } from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport Modal from '../../shared/components/UIElements/Modal';\nimport Map from '../../shared/components/UIElements/Map';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { delete_place } from \"../../assets/js/apiEndPoints\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport { setFileURL } from \"../../shared/hooks/file-hook\";\n\nimport './PlaceItem.css';\n\nconst PlaceItem = props => {\n  const [showMap, setShowMap] = useState(false);\n  const openMapHandler = () => setShowMap(true);\n  const closeMapHandler = () => setShowMap(false);\n\n  const [showConfirmModal, setShowConfirmModal] = useState(false);\n  const showDeleteWarningHandler = () => setShowConfirmModal(true);\n  const cancelDeleteHandler = () => setShowConfirmModal(false);\n\n  const { isLoadingSpinner, error, sendRequest, clearError } = useHttpClient();\n\n  const auth = useContext(AuthContext);\n  const deletePlaceHandler = async event => {\n    setShowConfirmModal(false);\n    try {\n      await sendRequest(delete_place, 'POST', { \n        'Content-Type': 'application/json',\n        'Authorization': 'Bearer ' + auth.token\n      }, JSON.stringify({\n        id: props.id\n      }))\n      props.onDelete(props.id);\n    } catch(err) {}\n  } ;\n\n  return (\n    <React.Fragment>\n      {error && <ErrorModal  error={error} onClear={clearError}/>}\n      <Modal\n        onCancel={closeMapHandler}\n        header={props.address}\n        show={showMap}\n        contentClass=\"place-item__modal-content\"\n        footerClass=\"place-item__modal-actions\"\n        footer={<Button onClick={closeMapHandler}>CLOSE</Button>}\n      >\n        <div className=\"map-container\">\n          <Map center={props.coordinates} zoom={16} />\n        </div>\n      </Modal>\n      <Modal \n        show={showConfirmModal}\n        onCancel={cancelDeleteHandler}\n        header={'Are You Sure ?'} \n        footerClass=\"place-item__modal-actions\" \n        footer={\n          <React.Fragment>\n            <Button inverse onClick={cancelDeleteHandler}>CANCEL</Button>\n            <Button danger onClick={deletePlaceHandler}>DELETE</Button>\n          </React.Fragment>\n      }>\n        <p>Do you want to proceed and delete this place? Please note it can't be undone thereafter</p>\n      </Modal>\n      \n      <li className=\"place-item\">\n        <Card className=\"place-item__content\">\n          {isLoadingSpinner && <LoadingSpinner asOverlay />}\n          <div className=\"place-item__image\">\n            <img src={setFileURL(props.image)} alt={props.title} />\n          </div>\n          <div className=\"place-item__info\">\n            <h2>{props.title}</h2>\n            <h3>{props.address}</h3>\n            <p>{props.description}</p>\n          </div>\n          <div className=\"place-item__actions\">\n            <Button inverse onClick={openMapHandler}>VIEW ON MAP</Button>\n            {auth.userId === props.createrId && <Button to={`/places/${props.id}`}>EDIT</Button>}\n            {auth.userId === props.createrId && <Button danger onClick={showDeleteWarningHandler}>DELETE</Button>}\n          </div>\n        </Card>\n      </li>\n    </React.Fragment>\n  );\n};\n\nexport default PlaceItem;\n","import React from 'react';\n\nimport Card from '../../shared/components/UIElements/Card';\nimport Button from '../../shared/components/FormElements/Button';\nimport PlaceItem from './PlaceItem';\nimport './PlaceList.css';\n\nconst PlaceList = props => {\n    if (props.items.length === 0){\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No Places Found, May be Create One ?</h2>\n                    <Button to={`/place/new`}>Share Place</Button>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"place-list\">\n            {props.items.map(place => (\n                <PlaceItem \n                    key={place.id}\n                    id={place.id}\n                    title={place.title}\n                    image={place.image}\n                    address={place.address}\n                    description={place.description}\n                    createrId={place.creator}\n                    coordinates={place.location}\n                    onDelete={props.onDeletePlace}\n                />\n            ))}\n        </ul>\n    );\n};\n\nexport default PlaceList;","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport PlaceList from '../components/PlaceList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\nimport { get_user_places } from \"../../assets/js/apiEndPoints\";\n\nconst UserPlaces = () => {\n    const [loadedPlaces, setLoadedPlaces] = useState([]);\n    const { isLoadingSpinner, error, sendRequest, clearError } = useHttpClient();\n    const userId = useParams().userId;\n    useEffect(() => {\n        const fetchPlaces = async () => {\n            try {\n                const userPlaces = await sendRequest(get_user_places+'?' + new URLSearchParams({\n                    uid: userId\n                }));\n                setLoadedPlaces(userPlaces.places);\n            } catch (err) {}\n        }\n        fetchPlaces();\n    }, [sendRequest, userId]);\n\n    const onPlaceDeleteHandler = (deletePlaceId) => {\n        setLoadedPlaces(prevPlaces => \n            prevPlaces.filter(place => place.id !== deletePlaceId)\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {isLoadingSpinner && <LoadingSpinner asOverlay />}\n            {error && <ErrorModal  error={error} onClear={clearError}/>}\n            <PlaceList items={loadedPlaces} onDeletePlace={onPlaceDeleteHandler}/>\n        </React.Fragment>\n    )\n};\n\nexport default UserPlaces;"],"sourceRoot":""}