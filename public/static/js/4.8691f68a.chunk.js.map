{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper.js","shared/components/UIElements/Card.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","users/pages/Auth.js"],"names":["ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","_defineProperty","obj","value","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","o","Symbol","iterator","Array","isArray","unsupportedIterableToArray","F","s","n","done","e","_e","f","TypeError","it","err","normalCompletion","didErr","step","next","_e2","validator","trim","test","Card","props","className","style","children","inputReducer","state","action","isTouched","Input","element","useReducer","initialValue","initialValid","inputState","dispatch","changeInputHandler","event","touchHandler","id","onInput","useEffect","placeholder","onChange","onBlur","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useForm","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoadingSpinner","error","sendRequest","clearError","email","inputChangeHandler","setFormData","authenticationSubmitHandler","a","preventDefault","login","JSON","stringify","password","responseData","userId","token","formData","FormData","append","name","image","signup","asOverlay","onClear","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"6FAAA,8CAEA,SAASA,EAAQC,EAAQC,GACvB,IAAIC,EAAOC,OAAOD,KAAKF,GAEvB,GAAIG,OAAOC,sBAAuB,CAChC,IAAIC,EAAUF,OAAOC,sBAAsBJ,GACvCC,IAAgBI,EAAUA,EAAQC,QAAO,SAAUC,GACrD,OAAOJ,OAAOK,yBAAyBR,EAAQO,GAAKE,eAEtDP,EAAKQ,KAAKC,MAAMT,EAAMG,GAGxB,OAAOH,EAGM,SAASU,EAAeC,GACrC,IAAK,IAAIC,EAAI,EAAGA,EAAIC,UAAUC,OAAQF,IAAK,CACzC,IAAIG,EAAyB,MAAhBF,UAAUD,GAAaC,UAAUD,GAAK,GAE/CA,EAAI,EACNf,EAAQI,OAAOc,IAAS,GAAMC,SAAQ,SAAUC,GAC9C,YAAeN,EAAQM,EAAKF,EAAOE,OAE5BhB,OAAOiB,0BAChBjB,OAAOkB,iBAAiBR,EAAQV,OAAOiB,0BAA0BH,IAEjElB,EAAQI,OAAOc,IAASC,SAAQ,SAAUC,GACxChB,OAAOmB,eAAeT,EAAQM,EAAKhB,OAAOK,yBAAyBS,EAAQE,OAKjF,OAAON,I,gCCjCM,SAASU,EAAgBC,EAAKL,EAAKM,GAYhD,OAXIN,KAAOK,EACTrB,OAAOmB,eAAeE,EAAKL,EAAK,CAC9BM,MAAOA,EACPhB,YAAY,EACZiB,cAAc,EACdC,UAAU,IAGZH,EAAIL,GAAOM,EAGND,EAZT,mC,oLCAA,IAQaI,EAAoB,iBAAO,CAAEC,KARX,YAUlBC,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAV+B,YAW/BE,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAfX,UAiBhBI,EAAW,SAACR,EAAOS,GAC9B,IAD6C,EACzCC,GAAU,EAD+B,ECrBhC,SAAoCC,GACjD,GAAsB,qBAAXC,QAAgD,MAAtBD,EAAEC,OAAOC,UAAmB,CAC/D,GAAIC,MAAMC,QAAQJ,KAAOA,EAAI,OAAAK,EAAA,GAA2BL,IAAK,CAC3D,IAAItB,EAAI,EAEJ4B,EAAI,aAER,MAAO,CACLC,EAAGD,EACHE,EAAG,WACD,OAAI9B,GAAKsB,EAAEpB,OAAe,CACxB6B,MAAM,GAED,CACLA,MAAM,EACNpB,MAAOW,EAAEtB,OAGbgC,EAAG,SAAWC,GACZ,MAAMA,GAERC,EAAGN,GAIP,MAAM,IAAIO,UAAU,yIAGtB,IAAIC,EAGAC,EAFAC,GAAmB,EACnBC,GAAS,EAEb,MAAO,CACLV,EAAG,WACDO,EAAKd,EAAEC,OAAOC,aAEhBM,EAAG,WACD,IAAIU,EAAOJ,EAAGK,OAEd,OADAH,EAAmBE,EAAKT,KACjBS,GAETR,EAAG,SAAWU,GACZH,GAAS,EACTF,EAAMK,GAERR,EAAG,WACD,IACOI,GAAoC,MAAhBF,EAAW,QAAWA,EAAW,SAC1D,QACA,GAAIG,EAAQ,MAAMF,KD5BqB,CAErBjB,GAFqB,IAE7C,2BAAoC,CAAC,IAA1BuB,EAAyB,QAxBP,YAyBvBA,EAAU5B,OACZM,EAAUA,GAAWV,EAAMiC,OAAO1C,OAAS,GAzBhB,cA2BzByC,EAAU5B,OACZM,EAAUA,GAAWV,EAAMiC,OAAO1C,QAAUyC,EAAU1B,KA3B3B,cA6BzB0B,EAAU5B,OACZM,EAAUA,GAAWV,EAAMiC,OAAO1C,QAAUyC,EAAU1B,KA7BjC,QA+BnB0B,EAAU5B,OACZM,EAAUA,IAAYV,GAASgC,EAAU1B,KA/BpB,QAiCnB0B,EAAU5B,OACZM,EAAUA,IAAYV,GAASgC,EAAU1B,KAjClB,UAmCrB0B,EAAU5B,OACZM,EAAUA,GAAW,iBAAiBwB,KAAKlC,KAnBF,8BAsB7C,OAAOU,I,gCE5CT,0BAYeyB,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,iGCFPC,G,MAAe,SAACC,EAAOC,GACzB,OAAQA,EAAOtC,MACX,IAAK,SACD,OAAO,2BACAqC,GADP,IAEIzC,MAAO0C,EAAOpC,IACdI,QAASF,YAASkC,EAAOpC,IAAKoC,EAAOjC,cAE7C,IAAK,QACD,OAAO,2BACAgC,GADP,IAEIE,WAAW,IAEnB,QACI,OAAOF,KA0EJG,IAtED,SAAAR,GAAU,IA8BhBS,EA9Be,EAEYC,qBAAWN,EAAc,CACpDxC,MAAOoC,EAAMW,cAAgB,GAC7BJ,WAAW,EACXjC,QAAS0B,EAAMY,eAAgB,IALhB,mBAEZC,EAFY,KAEAC,EAFA,KAQbC,EAAqB,SAAAC,GACvBF,EAAS,CACL9C,KAAM,SACNE,IAAK8C,EAAMhE,OAAOY,MAClBS,WAAY2B,EAAM3B,cAIpB4C,EAAe,WACjBH,EAAS,CACL9C,KAAM,WAINkD,EAAgBlB,EAAhBkB,GAAIC,EAAYnB,EAAZmB,QACJvD,EAAmBiD,EAAnBjD,MAAOU,EAAYuC,EAAZvC,QASf,OAPA8C,qBAAU,WACND,EAAQD,EAAItD,EAAOU,KACpB,CAAE4C,EAAItD,EAAOU,EAAS6C,IAKjBnB,EAAMS,SACV,IAAK,QACDA,EACI,2BACIS,GAAIlB,EAAMkB,GACVlD,KAAMgC,EAAMhC,KACZqD,YAAarB,EAAMqB,YACnBC,SAAUP,EACVQ,OAAQN,EACRrD,MAAOiD,EAAWjD,QAG1B,MACJ,IAAK,WACD6C,EACI,8BACIS,GAAIlB,EAAMkB,GACVlD,KAAMgC,EAAMhC,KACZqD,YAAarB,EAAMqB,YACnBC,SAAUP,EACVQ,OAAQN,EACRrD,MAAOiD,EAAWjD,QAQlC,OACI,yBAAKqC,UAAS,wBAAmBY,EAAWvC,SAAWuC,EAAWN,WAAa,0BAC3E,2BAAOiB,QAASxB,EAAMkB,IAAKlB,EAAMyB,OAChChB,GACCI,EAAWvC,SAAWuC,EAAWN,WAAa,2BAAIP,EAAM0B,c,0HCtFhEC,EAAc,SAACtB,EAAOC,GACxB,OAAQA,EAAOtC,MACX,IAAK,eACD,IAAI4D,GAAc,EAClB,IAAK,IAAMC,KAAWxB,EAAMyB,OACnBzB,EAAMyB,OAAOD,KAIdD,EADAC,IAAYvB,EAAOuB,QACLD,GAAetB,EAAOhC,QAEtBsD,GAAevB,EAAMyB,OAAOD,GAASvD,SAG3D,OAAO,2BACA+B,GADP,IAEIyB,OAAO,2BACAzB,EAAMyB,QADP,kBAEDxB,EAAOuB,QAAU,CAAEjE,MAAO0C,EAAO1C,MAAOU,QAASgC,EAAOhC,WAE7DA,QAASsD,IAEjB,IAAK,WACD,MAAO,CACHE,OAAQxB,EAAOwB,OACfxD,QAASgC,EAAOsB,aAExB,QACI,OAAOvB,IAMN0B,EAAU,SAACC,EAAeC,GAAyB,IAAD,EAE7BvB,qBAAWiB,EAAa,CAClDG,OAAQE,EACR1D,QAAS2D,IAJ8C,mBAEpDC,EAFoD,KAEzCpB,EAFyC,KAwB3D,MAAO,CAACoB,EAjBmBC,uBAAY,SAACjB,EAAItD,EAAOU,GAC/CwC,EAAS,CACL9C,KAAM,eACNJ,MAAOA,EACPU,QAASA,EACTuD,QAASX,MAEd,IAEiBiB,uBAAY,SAACC,EAAWC,GACxCvB,EAAS,CACL9C,KAAM,WACN8D,OAAQM,EACRR,YAAaS,MAElB,O,0ECKQC,IA1DK,SAAAtC,GAAU,IAAD,EACDuC,qBADC,mBAClBC,EADkB,KACZC,EADY,OAEWF,qBAFX,mBAElBG,EAFkB,KAENC,EAFM,OAGKJ,oBAAS,GAHd,mBAGlBjE,EAHkB,KAGTsE,EAHS,KAKnBC,EAAgBC,mBAMtB1B,qBAAU,WACN,GAAIoB,EAAJ,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAChBN,EAAcI,EAAWG,SAE7BH,EAAWI,cAAcX,MAC1B,CAACA,IAiBJ,OACI,yBAAKvC,UAAU,gBACX,2BACImD,IAAKP,EACL3B,GAAIlB,EAAMkB,GACVhB,MAAO,CAACmD,QAAS,QACjBrF,KAAK,OACLsF,OAAO,kBACPhC,SAvBe,SAAAN,GACvB,IAAIuC,EACAC,EAAclF,EACf0C,EAAMhE,OAAOyG,OAAuC,IAA9BzC,EAAMhE,OAAOyG,MAAMtG,QACxCoG,EAAavC,EAAMhE,OAAOyG,MAAM,GAChChB,EAAQc,GACRX,GAAW,GACXY,GAAc,IAEdZ,GAAW,GACXY,GAAc,GAElBxD,EAAMmB,QAAQnB,EAAMkB,GAAIqC,EAAYC,MAahC,yBAAKvD,UAAS,uBAAkBD,EAAM0D,QAAU,WAC5C,yBAAKzD,UAAU,yBACVyC,GAAc,yBAAKiB,IAAKjB,EAAYkB,IAAI,aACvClB,GAAc,+CAEpB,kBAAC,IAAD,CAAQ1E,KAAK,SAAS6F,QA7CT,WACrBhB,EAAciB,QAAQC,UA4Cd,kB,4OC+EDC,UApHF,WACT,IAAMC,EAAOC,qBAAWC,KADT,EAGuB5B,oBAAS,GAHhC,mBAGR6B,EAHQ,KAGKC,EAHL,OAI8CC,cAArDC,EAJO,EAIPA,iBAAkBC,EAJX,EAIWA,MAAOC,EAJlB,EAIkBA,YAAaC,EAJ/B,EAI+BA,WAJ/B,EAMsC3C,YAAQ,CACzD4C,MAAO,CACH/G,MAAO,GACPU,SAAS,KAEf,GAXa,mBAMR4D,EANQ,KAMG0C,EANH,KAMuBC,EANvB,KAoCTC,EAA2B,uCAAG,WAAM9D,GAAN,2BAAA+D,EAAA,yDAChC/D,EAAMgE,kBACHZ,EAF6B,0CAIGK,EAAYQ,IAAO,OAAQ,CAAE,eAAgB,oBAAsBC,KAAKC,UAAU,CACrGR,MAAOzC,EAAUJ,OAAO6C,MAAM/G,MAC9BwH,SAAUlD,EAAUJ,OAAOsD,SAASxH,SANpB,OAIlByH,EAJkB,OAUhBC,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,MAChBtB,EAAKgB,MAAMK,EAAQC,GAXK,oGAelBC,EAAW,IAAIC,UACZC,OAAO,OAAQxD,EAAUJ,OAAO6D,KAAK/H,OAC9C4H,EAASE,OAAO,QAASxD,EAAUJ,OAAO6C,MAAM/G,OAChD4H,EAASE,OAAO,WAAYxD,EAAUJ,OAAOsD,SAASxH,OACtD4H,EAASE,OAAO,QAASxD,EAAUJ,OAAO8D,MAAMhI,OAnBxB,UAoBG6G,EAAYoB,IAAQ,OAAQ,GAAIL,GApBnC,QAoBlBH,EApBkB,OAsBhBC,EAAkBD,EAAlBC,OAAQC,EAAUF,EAAVE,MAChBtB,EAAKgB,MAAMK,EAAQC,GAvBK,qHAAH,sDA4BjC,OACI,kBAAC,IAAD,CAAMtF,UAAU,kBACXsE,GAAoB,kBAAC,IAAD,CAAgBuB,WAAS,IAC7CtB,GAAS,kBAAC,IAAD,CAAaA,MAAOA,EAAOuB,QAASrB,IAC9C,8CACA,6BACA,0BAAMsB,SAAUlB,IACVV,GAAe,kBAAC,IAAD,CACG3D,QAAQ,QACRS,GAAG,OACHO,MAAM,YACNzD,KAAK,OACLK,WAAY,CAACN,eACb2D,UAAU,0BACVP,QAASyD,KAG3BR,GAAe,kBAAC,IAAD,CACGlD,GAAG,QACHC,QAASyD,EACTlB,QAAM,IAG1B,kBAAC,IAAD,CACIjD,QAAQ,QACRS,GAAG,QACHO,MAAM,SACNzD,KAAK,OACLK,WAAY,CAACF,eACbuD,UAAU,oCACVP,QAASyD,IAEb,kBAAC,IAAD,CACInE,QAAQ,QACRS,GAAG,WACHO,MAAM,WACNzD,KAAK,WACLK,WAAY,CAACJ,YAAoB,IACjCyD,UAAU,qCACVP,QAASyD,IAEb,kBAAC,IAAD,CAAQ5G,KAAK,SAASiI,UAAW/D,EAAU5D,SACrC8F,EAAc,QAAU,UAE9B,kBAAC,IAAD,CAAQpG,KAAK,SAASkI,SAAO,EAACrC,QA/FhB,WACjBO,EAODS,EAAY,2BACL3C,EAAUJ,QADN,IAEP6D,KAAM,CACF/H,MAAO,GACPU,SAAS,GAEbsH,MAAO,CACHhI,MAAO,KACPU,SAAS,MAEd,GAhBJuG,EAAY,2BACL3C,EAAUJ,QADN,IAEP6D,UAAMQ,EACNP,WAAOO,IACRjE,EAAUJ,OAAO6C,MAAMrG,SAAW4D,EAAUJ,OAAOsD,SAAS9G,SAclE+F,GAAe,SAAA+B,GAAQ,OAAKA,OA2EpB,SACYhC,EAAc,SAAW","file":"static/js/4.8691f68a.chunk.js","sourcesContent":["import defineProperty from \"./defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};","import unsupportedIterableToArray from \"./unsupportedIterableToArray\";\nexport default function _createForOfIteratorHelper(o) {\n  if (typeof Symbol === \"undefined\" || o[Symbol.iterator] == null) {\n    if (Array.isArray(o) || (o = unsupportedIterableToArray(o))) {\n      var i = 0;\n\n      var F = function F() {};\n\n      return {\n        s: F,\n        n: function n() {\n          if (i >= o.length) return {\n            done: true\n          };\n          return {\n            done: false,\n            value: o[i++]\n          };\n        },\n        e: function e(_e) {\n          throw _e;\n        },\n        f: F\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var it,\n      normalCompletion = true,\n      didErr = false,\n      err;\n  return {\n    s: function s() {\n      it = o[Symbol.iterator]();\n    },\n    n: function n() {\n      var step = it.next();\n      normalCompletion = step.done;\n      return step;\n    },\n    e: function e(_e2) {\n      didErr = true;\n      err = _e2;\n    },\n    f: function f() {\n      try {\n        if (!normalCompletion && it[\"return\"] != null) it[\"return\"]();\n      } finally {\n        if (didErr) throw err;\n      }\n    }\n  };\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","import React, { useReducer, useEffect } from 'react';\n\nimport { validate } from '../../util/validators';\nimport './Input.css';\n\nconst inputReducer = (state, action) => {\n    switch (action.type) {\n        case 'CHANGE':\n            return {\n                ...state,\n                value: action.val,\n                isValid: validate(action.val, action.validators)\n            };\n        case 'TOUCH':\n            return {\n                ...state,\n                isTouched: true\n            };\n        default:\n            return state;\n    }\n};\n\nconst Input = props => {\n\n    const [inputState, dispatch] = useReducer(inputReducer, {\n        value: props.initialValue || '', \n        isTouched: false,\n        isValid: props.initialValid || false\n    });\n\n    const changeInputHandler = event => {\n        dispatch({\n            type: 'CHANGE', \n            val: event.target.value, \n            validators: props.validators\n        });\n    };\n\n    const touchHandler = () => {\n        dispatch({\n            type: 'TOUCH'\n        });\n    };\n\n    const { id, onInput } = props;\n    const { value, isValid } = inputState;\n\n    useEffect(() => {\n        onInput(id, value, isValid);\n    }, [ id, value, isValid, onInput ]);\n\n\n    let element;\n\n    switch (props.element) {\n        case 'input':\n            element = (\n                <input \n                    id={props.id} \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    onChange={changeInputHandler}\n                    onBlur={touchHandler}\n                    value={inputState.value}\n                />\n            )\n            break;\n        case 'textarea':\n            element = (\n                <textarea \n                    id={props.id} \n                    type={props.type} \n                    placeholder={props.placeholder} \n                    onChange={changeInputHandler}\n                    onBlur={touchHandler}\n                    value={inputState.value}\n                />\n            )\n            break;\n        default: \n            break;\n    }\n\n    return (\n        <div className={`form-control ${!inputState.isValid && inputState.isTouched && 'form-control--invalid'}`}>\n            <label htmlFor={props.id}>{props.label}</label>\n            {element}\n            {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n        </div>\n    );\n};\n\nexport default Input;","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n    switch (action.type) {\n        case 'INPUT_CHANGE':\n            let formIsValid = true;\n            for (const inputId in state.inputs){\n                if (!state.inputs[inputId]) {\n                    continue;\n                }\n                if (inputId === action.inputId) {\n                    formIsValid = formIsValid && action.isValid;\n                } else {\n                    formIsValid = formIsValid && state.inputs[inputId].isValid;\n                }\n            }\n            return {\n                ...state,\n                inputs: {\n                    ...state.inputs,\n                    [action.inputId]: { value: action.value, isValid: action.isValid }\n                },\n                isValid: formIsValid \n            };\n        case 'SET_DATA':\n            return {\n                inputs: action.inputs,\n                isValid: action.formIsValid\n            };\n        default:\n            return state;\n    }\n};\n\n\n\nexport const useForm = (initialInputs, initialFormValidity) => {\n\n    const [formState, dispatch] = useReducer(formReducer, {\n        inputs: initialInputs,\n        isValid: initialFormValidity\n    });\n\n    const inputChangeHandler = useCallback((id, value, isValid) => {\n        dispatch({\n            type: 'INPUT_CHANGE',\n            value: value,\n            isValid: isValid,\n            inputId: id\n        });\n    }, []);\n\n    const setFormData = useCallback((inputData, formValidity) => {\n        dispatch({\n            type: \"SET_DATA\",\n            inputs: inputData,\n            formIsValid: formValidity\n        });\n    }, []);\n\n    return [formState, inputChangeHandler, setFormData];\n};","import React, { useRef, useState, useEffect } from \"react\";\n\nimport Button from \"./Button\";\nimport \"./ImageUpload.css\";\n\nconst ImageUpload = props => {\n    const [file, setFile] = useState();\n    const [previewUrl, setPreviewUrl] = useState();\n    const [isValid, setIsValid] = useState(false);\n\n    const filePickerRef = useRef();\n\n    const pickImageHandler = () => {\n        filePickerRef.current.click();\n    };\n\n    useEffect(() => {\n        if(!file) {\n            return;\n        }\n        const fileReader = new FileReader();\n        fileReader.onload = () => {\n            setPreviewUrl(fileReader.result);\n        };\n        fileReader.readAsDataURL(file);\n    }, [file]);\n\n    const pickedImageHandler = event => {\n        let pickedFile;\n        let fileIsValid = isValid;\n        if(event.target.files && event.target.files.length === 1) {\n            pickedFile = event.target.files[0];\n            setFile(pickedFile);\n            setIsValid(true);\n            fileIsValid = true;\n        } else {\n            setIsValid(false);\n            fileIsValid = false;\n        }\n        props.onInput(props.id, pickedFile, fileIsValid);\n    };\n\n    return (\n        <div className=\"form-control\">\n            <input \n                ref={filePickerRef}\n                id={props.id} \n                style={{display: 'none'}} \n                type=\"file\" \n                accept=\".jpg,.png,.jpeg\" \n                onChange={pickedImageHandler}\n            />\n            <div className={`image-upload ${props.center && 'center'}`}>\n                <div className=\"image-upload__preview\">\n                    {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n                    {!previewUrl && <h2>Pick an image.</h2>}\n                </div>\n                <Button type=\"button\" onClick={pickImageHandler}>PICK IMAGE</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default ImageUpload;","import React, { useState, useContext } from 'react';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { \n    VALIDATOR_EMAIL, \n    VALIDATOR_MINLENGTH,\n    VALIDATOR_REQUIRE\n} from '../../shared/util/validators';\nimport { useForm } from '../../shared/hooks/form-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { login, signup } from \"../../assets/js/apiEndPoints\";\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nimport './Auth.css';\n\nconst Auth = () => {\n    const auth = useContext(AuthContext);\n\n    const [isLoginMode, setIsLoginMode] = useState(true);\n    const { isLoadingSpinner, error, sendRequest, clearError } = useHttpClient();\n\n    const [formState, inputChangeHandler, setFormData] = useForm({\n        email: {\n            value: '',\n            isValid: false\n        }\n    },false);\n\n    const switchModeHandler = () => {\n        if (!isLoginMode) {\n           setFormData({\n               ...formState.inputs,\n               name: undefined,\n               image: undefined\n           }, formState.inputs.email.isValid && formState.inputs.password.isValid);\n        } else {\n            setFormData({\n                ...formState.inputs,\n                name: {\n                    value: '',\n                    isValid: false\n                },\n                image: {\n                    value: null,\n                    isValid: false\n                }\n            }, false)\n        }\n        setIsLoginMode(prevMode => !prevMode);\n    };\n\n    const authenticationSubmitHandler = async event => {\n        event.preventDefault();\n        if(isLoginMode) {\n            try {\n                const responseData = await sendRequest(login, 'POST', { 'Content-Type': 'application/json' }, JSON.stringify({\n                        email: formState.inputs.email.value,\n                        password: formState.inputs.password.value\n                    })\n                )\n\n                const { userId, token } = responseData;\n                auth.login(userId, token);\n            } catch(err) {}\n        } else {\n            try {\n                const formData = new FormData();\n                formData.append('name', formState.inputs.name.value);\n                formData.append('email', formState.inputs.email.value);\n                formData.append('password', formState.inputs.password.value);\n                formData.append('image', formState.inputs.image.value);\n                const responseData = await sendRequest(signup, 'POST', {}, formData);\n\n                const { userId, token } = responseData;\n                auth.login(userId, token);\n            } catch (err) {}\n        }\n    };\n\n    return (\n        <Card className=\"authentication\">\n            {isLoadingSpinner && <LoadingSpinner asOverlay />}\n            {error && <ErrorModal  error={error} onClear={clearError}/>}\n            <h2>Login Required</h2>\n            <hr />\n            <form onSubmit={authenticationSubmitHandler}>\n                {!isLoginMode && <Input \n                                    element=\"input\" \n                                    id=\"name\" \n                                    label=\"Your Name\" \n                                    type=\"text\" \n                                    validators={[VALIDATOR_REQUIRE()]}\n                                    errorText=\"Please enter your name.\"\n                                    onInput={inputChangeHandler}\n                                />\n                }\n                {!isLoginMode && <ImageUpload \n                                    id=\"image\" \n                                    onInput={inputChangeHandler}\n                                    center \n                                />\n                }\n                <Input\n                    element=\"input\"\n                    id=\"email\"\n                    label=\"E-mail\"\n                    type=\"text\"\n                    validators={[VALIDATOR_EMAIL()]}\n                    errorText=\"Please enter valid email address.\"\n                    onInput={inputChangeHandler}\n                />\n                <Input\n                    element=\"input\"\n                    id=\"password\"\n                    label=\"Password\"\n                    type=\"password\"\n                    validators={[VALIDATOR_MINLENGTH(5)]}\n                    errorText=\"Please enter atleast 5 characters.\"\n                    onInput={inputChangeHandler}\n                />\n                <Button type=\"submit\" disabled={!formState.isValid}>\n                    { isLoginMode ? 'LOGIN' : 'SIGNUP' }\n                </Button>\n                <Button type=\"button\" inverse onClick={switchModeHandler}>\n                    GO TO { isLoginMode ? 'SIGNUP' : 'LOGIN' }\n                </Button>\n            </form>\n        </Card>\n    );\n};\n\nexport default Auth;"],"sourceRoot":""}