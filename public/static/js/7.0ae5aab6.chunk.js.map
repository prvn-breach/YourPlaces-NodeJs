{"version":3,"sources":["shared/components/UIElements/Card.js","shared/hooks/file-hook.js","shared/components/UIElements/Avatar.js","users/components/UserItem.js","users/components/UserList.js","users/pages/Users.js"],"names":["Card","props","className","style","children","setFileURL","path","process","Avatar","src","image","alt","width","height","UserItem","to","id","name","placeCount","UserList","items","length","map","user","key","places","Users","useHttpClient","isLoadingSpinner","error","sendRequest","clearError","useState","loadedUsers","setLoadedUsers","history","useHistory","useEffect","a","get_users","users","data","push","getUsers","Fragment","LoadingSpinner","asOverlay","ErrorModal","onClear"],"mappings":"6FAAA,0BAYeA,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,qDCPb,kCAAO,IAAMC,EAAa,SAACC,GAEvB,MADYC,mCAAkCD,I,iMCenCE,G,YAZA,SAAAP,GACb,OACE,yBAAKC,UAAS,iBAAYD,EAAMC,WAAaC,MAAOF,EAAME,OACxD,yBACEM,IAAKR,EAAMS,MACXC,IAAKV,EAAMU,IACXR,MAAO,CAAES,MAAOX,EAAMW,MAAOC,OAAQZ,EAAMW,Y,QCgBpCE,EAlBE,SAAAb,GACb,OACI,wBAAIC,UAAU,aACV,kBAACF,EAAA,EAAD,CAAME,UAAU,sBACZ,kBAAC,IAAD,CAAMa,GAAE,WAAMd,EAAMe,GAAZ,YACJ,yBAAKd,UAAU,oBACX,kBAAC,EAAD,CAAQQ,MAAOL,YAAWJ,EAAMS,OAAQC,IAAKV,EAAMgB,QAEvD,yBAAKf,UAAU,mBACX,4BAAKD,EAAMgB,MACX,4BAAKhB,EAAMiB,WAAX,IAAyBjB,EAAMiB,WAAa,GAAKjB,EAAMiB,WAAa,EAAK,SAAW,cCc7FC,EA1BE,SAAAlB,GACb,OAA0B,IAAvBA,EAAMmB,MAAMC,OAEP,yBAAKnB,UAAU,UACX,kBAACF,EAAA,EAAD,KACI,gDAOZ,wBAAIE,UAAU,aACTD,EAAMmB,MAAME,KAAI,SAACC,GAAD,OACb,kBAAC,EAAD,CACIC,IAAKD,EAAKP,GACVA,GAAIO,EAAKP,GACTC,KAAMM,EAAKN,KACXP,MAAOa,EAAKb,MACZQ,WAAYK,EAAKE,OAAOJ,c,wBCU7BK,UA3BD,WAAO,IAAD,EAC6CC,cAArDC,EADQ,EACRA,iBAAkBC,EADV,EACUA,MAAOC,EADjB,EACiBA,YAAaC,EAD9B,EAC8BA,WAD9B,EAEwBC,qBAFxB,mBAERC,EAFQ,KAEKC,EAFL,KAGVC,EAAUC,cAehB,OAbAC,qBAAU,YACQ,uCAAG,4BAAAC,EAAA,+EAEWR,EAAYS,KAFvB,OAGgB,KADnBC,EAFG,QAGAC,KAAKpB,QACVc,EAAQO,KAAK,SAEjBR,EAAeM,EAAMC,MANZ,iHAAH,qDASdE,KACD,CAAEb,EAAaK,IAGd,kBAAC,IAAMS,SAAP,KACKhB,GAAoB,kBAACiB,EAAA,EAAD,CAAgBC,WAAS,IAC7CjB,GAAS,kBAACkB,EAAA,EAAD,CAAalB,MAAOA,EAAOmB,QAASjB,KAC5CH,GAAoBK,GAAe,kBAAC,EAAD,CAAUb,MAAOa","file":"static/js/7.0ae5aab6.chunk.js","sourcesContent":["import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","export const setFileURL = (path) => {\n    const url = process.env.REACT_APP_ASSET_URL + path;\n    return url;\n};","import React from 'react';\n\nimport './Avatar.css';\n\nconst Avatar = props => {\n  return (\n    <div className={`avatar ${props.className}`} style={props.style}>\n      <img\n        src={props.image}\n        alt={props.alt}\n        style={{ width: props.width, height: props.width }}\n      />\n    </div>\n  );\n};\n\nexport default Avatar;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { setFileURL } from \"../../shared/hooks/file-hook\";\n\nimport './UserItem.css';\nimport Avatar from '../../shared/components/UIElements/Avatar';\nimport Card from '../../shared/components/UIElements/Card';\n\nconst UserItem = props => {\n    return (\n        <li className=\"user-item\">\n            <Card className=\"user-item__content\">\n                <Link to={`/${props.id}/places`}>\n                    <div className=\"user-item__image\">\n                        <Avatar image={setFileURL(props.image)} alt={props.name} />\n                    </div>\n                    <div className=\"user-item__info\">\n                        <h2>{props.name}</h2>\n                        <h3>{props.placeCount} {(props.placeCount > 0 && props.placeCount > 1) ? 'Places' : 'Place'}</h3>\n                    </div>\n                </Link>\n            </Card>\n        </li>\n    );\n};\n\nexport default UserItem;","import React from 'react';\n\nimport './UserList.css';\nimport UserItem from '../components/UserItem';\nimport Card from '../../shared/components/UIElements/Card';\n\nconst UserList = props => {\n    if(props.items.length === 0){\n        return (\n            <div className=\"center\">\n                <Card>\n                    <h2>No Users Found</h2>\n                </Card>\n            </div>\n        );\n    }\n\n    return (\n        <ul className=\"user-list\">\n            {props.items.map((user) => (\n                <UserItem \n                    key={user.id}\n                    id={user.id}\n                    name={user.name}\n                    image={user.image}\n                    placeCount={user.places.length}\n                />\n            ))}\n        </ul>\n    );\n}; \n\nexport default UserList;","import React, { useEffect, useState } from 'react';\nimport { useHistory } from \"react-router-dom\";\nimport { get_users } from \"../../assets/js/apiEndPoints\";\nimport UserList from '../components/UserList';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport { useHttpClient } from \"../../shared/hooks/http-hook\";\n\nconst Users = () => {\n    const { isLoadingSpinner, error, sendRequest, clearError } = useHttpClient();\n    const [ loadedUsers, setLoadedUsers ] = useState();\n    const history = useHistory();\n\n    useEffect(() => {\n        const getUsers = async() => {\n            try {\n                const users = await sendRequest(get_users);\n                if(users.data.length === 0) {\n                    history.push('/auth');\n                }\n                setLoadedUsers(users.data);\n            } catch(err) {};\n        };\n        getUsers();\n    }, [ sendRequest, history ]);\n\n    return (\n        <React.Fragment>\n            {isLoadingSpinner && <LoadingSpinner asOverlay />}\n            {error && <ErrorModal  error={error} onClear={clearError}/>}\n            {!isLoadingSpinner && loadedUsers && <UserList items={loadedUsers}/>}\n        </React.Fragment>\n    );\n};\n\nexport default Users;"],"sourceRoot":""}